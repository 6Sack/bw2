package util

//These are messages that are not generated by the clients.
// -status from message
// -find/ls response
// they are not signed because they are "from" the router
// and the transport is secure. These terminate at the router
// so the client never sees this "framing".
// i.e c->A->B, this message would be from B to A. c only sees
// the contents of the message, not the frame.

const (
	BWStatusUnchecked      = 0
	BWStatusOkay           = 200
	BWStatusOkayAsResolved = 201
	BWStatusUnresolvable   = 401
	BWStatusInvalidDOT     = 402
	BWStatusInvalidSig     = 403
	BWStatusTTLExpired     = 404
	BWStatusBadPermissions = 405
	//In Anarchy we are assuming that all messages are delivered on a channel
	//that matches the origin VK of the messages. This indicates a mismatch
	//of that assumption
	BWStatusOriginVKMismatch = 406
	//Using an ALL dchain but no origin RO
	BWStatusNoOrigin = 407
	BWStatusBadURI   = 408
	//Returned if you try to publish to a wildcard
	BWStatusBadOperation      = 409
	BWStatusMVKMismatch       = 410
	BWStatusMalformedMessage  = 411
	BWStatusAffinityMismatch  = 412
	BWStatusPeerError         = 413
	BWStatusExpiredDOT        = 414
	BWStatusExpiredEntity     = 415
	BWStatusRevokedDOT        = 416
	BWStatusRevokedEntity     = 417
	BWStatusChainOriginNotMVK = 418
	BWStatusInvalidEntity     = 419
	//Returned when a permission RO is used where an access RO is required
	BWStatusNotAccessRO = 420
	//Returned when a DChain has a DOT whose src is not the previous dst
	BWStatusBadLink = 421
	//Returned when a URI is invalid after being constrained by DOTs
	BWStatusOverconstrainedURI = 422
	//Returned if you attempt to send a message without having an entity
	BWStatusNoEntity = 423
)
