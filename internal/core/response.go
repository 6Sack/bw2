package core

import "github.com/immesys/bw2/objects"

//These are messages that are not generated by the clients.
// -status from message
// -find/ls response
// they are not signed because they are "from" the router
// and the transport is secure. These terminate at the router
// so the client never sees this "framing".
// i.e c->A->B, this message would be from B to A. c only sees
// the contents of the message, not the frame.

const (
	BWStatusUnchecked      = 0
	BWStatusOkay           = 200
	BWStatusUnresolvable   = 401
	BWStatusInvalidDOT     = 402
	BWStatusInvalidSig     = 403
	BWStatusTTLExpired     = 404
	BWStatusBadPermissions = 405
	//In Anarchy we are assuming that all messages are delivered on a channel
	//that matches the origin VK of the messages. This indicates a mismatch
	//of that assumption
	BWStatusOriginVKMismatch = 406
	//Using an ALL dchain but no origin RO
	BWStatusNoOrigin = 407
	BWStatusBadURI   = 408
	//Returned if you try to publish to a wildcard
	BWStatusBadOperation = 409
	BWStatusMVKMismatch  = 410
)

type UniqueMessageID struct {
	Mid uint64
	Sig uint64
}
type StatusMessage struct {
	UMid UniqueMessageID
	Code int
}
type ObjectResponse struct {
	UMid    UniqueMessageID
	Objects []objects.PayloadObject
}

func (s *StatusMessage) Ok() bool {
	return s.Code == BWStatusOkay
}
