#!/bin/sh
set -e
# This script was largely guided by the docker install script
# It should be used with:
#   'curl -sSL https://get.bw2.io/alpha | sh'
# or:
#   'wget -qO- https://get.bw2.io/alpha | sh'
#

REL=REPLACE_THIS

command_exists() {
	command -v "$@" > /dev/null 2>&1
}

do_install() {
	cat >&2 <<'EOF'
 ___    _       _    __
(  _`\ ( )  _  ( ) /'__`\
| (_) )| | ( ) | |(_)  ) )
|  _ <'| | | | | |   /' /
| (_) )| (_/ \_) | /' /( )
(____/'`\___x___/'(_____/'

EOF

echo "Automated installer for BOSSWAVE $REL "

	case "$(uname -m)" in
		x86_64)
			ARCH=amd64
			;;
		i686)
			ARCH=i386
			;;
		armv7l)
			ARCH=arm7
			;;
		*)
			cat >&2 <<-'EOF'
			Error: you are not using an x86_64/i686/armv7 platform.
			The bw2 auto installer does not support hipster platforms.
			EOF
			exit 1
			;;
	esac

	case "$(uname -s)" in
		Darwin)
			PLAT=darwin
			;;
		Linux)
			PLAT=linux
			;;
		*)
			cat >&2 <<-'EOF'
			Error: you are not using Linux or Darwin.
			The bw2 auto installer does not support hipster platforms.
			EOF
			exit 1
		esac

	user="$(id -un 2>/dev/null || true)"

	sh_c='sh -c'
	if [ "$user" != 'root' ]; then
		if command_exists sudo; then
			sh_c='sudo -E sh -c'
		elif command_exists su; then
			sh_c='su -c'
		else
			cat >&2 <<-'EOF'
			Error: this installer needs the ability to run commands as root.
			We are unable to find either "sudo" or "su" available to make this happen.
			EOF
			exit 1
		fi
	fi

	curl=''
	if command_exists curl; then
		curl='curl -sSL'
	elif command_exists wget; then
		curl='wget -qO-'
	fi

	if [ $PLAT = "linux" ]
	then
		if [ -e /etc/issue ]
		then
			case "$(cut -d' ' -f 1 /etc/issue)" in
				"Ubuntu")
					DIST=ubuntu
					;;
				*)
					cat >&2 <<-'EOF'
					Error: you are not using Ubuntu.
					The bw2 auto installer does not support hipster Linuxes.
					EOF
					exit 1
			esac
		else
			cat >&2 <<-'EOF'
			Error: you are not using Ubuntu (/etc/issue is missing).
			The bw2 auto installer does not support hipster Linuxes.
			EOF
			exit 1
		fi
		# work out if we need systemd
		if [ "$(pidof systemd)" = "" ] && [ "$(pidof systemd-udevd)" = "" ]
		then
			echo "Assuming upstart"
			use_systemd=0
		else
			echo "Assuming systemd"
			use_systemd=1
		fi
	fi

	$sh_c "mkdir -p /var/log/bw2"

	$sh_c "mkdir -p /var/run/bw2"

	$sh_c "mkdir -p /var/lib/bw2"


	if [ $PLAT = "linux" ]
	then
		export DEBIAN_FRONTEND=noninteractive
		set +e
		getent passwd bw2 > /dev/null
		if [ $? -ne 0 ]; then
			( set -x; $sh_c 'useradd -r -s /usr/sbin/nologin bw2' )
		fi
		echo "Checking that ntpd is installed"
		$sh_c 'apt-get update >/dev/null'
		$sh_c 'apt-get install -y ntp'
		$sh_c 'service ntp start'
		echo "NTP status: "
		ntpq -p
		set +e
		$sh_c "chown bw2:bw2 /var/log/bw2"
		$sh_c "chown bw2:bw2 /var/run/bw2"
		$sh_c "chown bw2:bw2 /var/lib/bw2"


		if [ $use_systemd -eq 1 ]; then
			$sh_c "systemctl stop bw2"
			$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/bw2.service > /etc/systemd/system/bw2.service"
			$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/bw2 > /usr/local/bin/bw2"
			$sh_c "chmod a+x /usr/local/bin/bw2"
			$sh_c "systemctl daemon-reload"
		else
			# Configure default for upstart
			$sh_c "cat >/etc/default/bw2" <<-'EOF'
			NAME=bw2
			CONF=/etc/bw2/bw2.ini
			RUNDIR=/var/run/bw2
			PIDFILE=$RUNDIR/$NAME.pid
			ENABLE_ROUTER=yes
			BW_USER=bw2
			EOF
			set +e
			$sh_c "service bw2 stop"
			set -e
			$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/sysvlsb > /etc/init.d/bw2"
			$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/bw2 > /usr/local/bin/bw2"
			$sh_c "chmod a+x /usr/local/bin/bw2"
			$sh_c "chmod a+x /etc/init.d/bw2"
		fi

		if [[ $use_systemd -eq 1 ]]
		then
			$sh_c "systemctl enable bw2"
		else
			$sh_c "update-rc.d -f bw2 defaults"
		fi

		if [ -e "/etc/bw2/bw2.ini" ]
		then
			echo "Not overwiting existing bw2.ini file or router key."
			if [[ $use_systemd -eq 1 ]]
			then
				echo "Double check your config then run 'sudo systemctl start bw2'"
			else
				echo "Double check your config then run 'sudo service bw2 start'"
			fi
			set +e
			$sh_c "chown bw2:bw2 /etc/bw2/bw2.ini"
			$sh_c "chown bw2:bw2 /etc/bw2/router.ent"
			set -e
		else
			$sh_c "mkdir -p /etc/bw2"
			$sh_c "/usr/local/bin/bw2 makeconf --conf /etc/bw2/bw2.ini --logfile /var/log/bw2/bw2.log --dbpath /var/lib/bw2/"
			$sh_c "chown bw2:bw2 /etc/bw2/bw2.ini"
			$sh_c "chown bw2:bw2 /etc/bw2/router.ent"
			if [[ $use_systemd -eq 1 ]]
			then
				$sh_c "systemctl start bw2"
			else
				$sh_c "service bw2 start"
			fi
		fi
	fi #end if linux
	if [ $PLAT = "darwin" ]
	then
		if [ -e /Library/LaunchDaemons/io.bw2.agent.plist ]
		then
			sudo launchctl unload /Library/LaunchDaemons/io.bw2.agent.plist 2>/dev/null
		fi
		$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/bw2 > /usr/local/bin/bw2"
		$sh_c "$curl http://get.bw2.io/bw2/2.x/$PLAT/$ARCH/$REL/io.bw2.agent.plist > /Library/LaunchDaemons/io.bw2.agent.plist"
		$sh_c "chmod a+x /usr/local/bin/bw2"
		if [ -e "/etc/bw2/bw2.ini" ]
		then
			echo "Not overwiting existing bw2.ini file or router key."
		else
			$sh_c "mkdir -p /etc/bw2"
			$sh_c "/usr/local/bin/bw2 makeconf --conf /etc/bw2/bw2.ini --logfile /var/log/bw2/bw2.log --dbpath /var/lib/bw2/"
		fi
		sudo launchctl load /Library/LaunchDaemons/io.bw2.agent.plist
	fi
	echo "Bosswave $REL installed successfully"
	exit 0
}

do_install
